Illuminant Technical Interview - Take-Home Problem:

Included in this .zip file are two images (1920x1080p) of a patient's back in PNG format, one in grayscale, and another in color.
Three circular/donut-shaped stickers have been placed on the patient's back. You may choose either or both images to work with if you'd like. The challenge is to find the coordinates (in image pixels) of the centers of these round stickers. e.g.:

"
112,115
730, 32
1503, 996
"

You may print the results directly to the console, out to a text file, in .csv format, printed onto the image, or any other sensible way - whichever is easiest.
You may use any library/software package that you can find, as well as reference existing repositories,  sample code, or even forum answers. We aren't testing your computer vision skills, but rather your coding style, and problem-solving skills. There is no time limit but, please do not spend too long on this task. Get as far as you're able and then plan out the remainder of your solution to be reviewed in the interview.

You may use Python (including Jupyter Notebooks or Google Collab), C/C++, C#, and any additional libraries or plugins. I recommend Python and OpenCV since they are the fastest to set up, but as long as you can run it on your machine, it is perfectly okay.

1. Set up your development environment, and save your work in a Git/GitHub repository, making sensible commits as you progress.
2. Install/import any useful libraries that you may need.
3. Try to read the image into memory and display it back (you can convert it to any format you like beforehand.)
4. Try to find at least one of the circles, and maybe some false positives.
5. Try to get all of the circles with maybe some false positives.
6. Try to eliminate false positives.

If incomplete, please be prepared to describe a potential method/plan to solve the remaining steps. Try not to spend too long on this problem!

Help - as a starting point:

https://docs.opencv.org/3.4/d6/d00/tutorial_py_root.html
https://docs.opencv.org/4.x/d1/dfb/intro.html
https://docs.opencv.org/3.4/d4/d70/tutorial_hough_circle.html